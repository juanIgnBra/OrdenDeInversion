// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrdenesDeinversion.Models.Entity;

#nullable disable

namespace OrdenesDeinversion.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20250119024515_Primera")]
    partial class Primera
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OrdenesDeinversion.Models.Entity.Dominio.OrdenesDeInversion", b =>
                {
                    b.Property<int>("IdDeLaOrden")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDeLaOrden"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("Estado")
                        .HasColumnType("int");

                    b.Property<int>("IdDeLaCuenta")
                        .HasColumnType("int");

                    b.Property<decimal?>("MontoTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NombreDelActivo")
                        .IsRequired()
                        .HasColumnType("varchar(32)");

                    b.Property<string>("Operacion")
                        .IsRequired()
                        .HasColumnType("char(2)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdDeLaOrden");

                    b.ToTable("ordenesDeInversion");
                });
#pragma warning restore 612, 618
        }
    }
}
